version: '3'
services:
  catalogdb:
    image: mongo:latest
    container_name: catalogdb
    restart: always
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - mongodb-data:/data/db
    # Optional: Uncomment the lines below if you have initialization scripts
    # volumes:
    #   - ./init-scripts:/docker-entrypoint-initdb.d
    # Optional: Uncomment the lines below if you have a custom entrypoint script
    # command: ["--auth"]

  basketdb:
    image: redis:latest
    container_name: basketdb
    restart: always
    ports:
      - '6379:6379'

  postgredb:
    image: postgres:latest
    container_name: postgredb
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: mydatabase
    volumes:
      - postgres-data:/var/lib/postgresql/data

  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - 'DatabaseSettings:ConnectionString=mongodb://admin:admin@catalogdb:27017'
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    ports:
      - '8000:80'
    depends_on:
      - catalogdb

  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - 'CacheSettings:ConnectionString=basketdb:6379'
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile
    ports:
      - '8001:80'
    depends_on:
      - basketdb

  mongoclient:
    image: mongoclient/mongoclient
    container_name: mongoclient
    environment:
      MONGOCLIENT_DEFAULT_CONNECTION_URL: mongodb://admin:admin@catalogdb:27017
    ports:
      - '3100:3000'
    depends_on:
      - catalogdb

volumes:
  mongodb-data:
  postgres-data:
